input {
    beats {
        port => 5044
    }
}
filter {
    grok {
      patterns_dir   => ["./patterns"]
      match          => { "message" => "%{BACKEND_API_NEWSTRIGGER_HIT}" }
      target         => "apache"
      tag_on_failure => "_grokparsefailure_newstrigger"
    }

    # Requests to /1/newstrigger/ are saved on a different index which is
    # used by the analytics team. See:
    #  - https://github.com/sketch-hq/BusinessOperationsDashboard/blob/91cb0906b4dc0f136519be4cdd05efe7d09836e8/etl/newstrigger_etl.py#L77
    #
    # Also note that /1/newstrigger is redirected to /1/newstrigger/ so we
    # only need to match the latest
    if "_grokparsefailure_newstrigger" not in [tags] {
      kv {
        source => "[apache][uriparams]"
        field_split => "&"
        target => "[apache][params]"
      }
      mutate {
        remove_field => [ "[apache][uriparams]" ]
        replace => { "[@metadata][target_index]" => "newstrigger-%{+YYYY.MM}" }
      }
    }
    else {
        mutate {
            rename => { "[cloud][instance][id]" => "instance" }
        }

        grok {
            patterns_dir   => ["./patterns"]
            match          => { "message" => "%{BACKEND_API}" }
            tag_on_failure => "_grokparsefailure_backendapihit"
        }

        if "_grokparsefailure_backendapihit" in [tags] {
            mutate {
                add_field => { "level" => "WARN" }
            }
        }
        else {
            mutate {
                add_field => { "level" => "INFO" }
            }
        }
    }
}
output {
    elasticsearch {
        hosts => ["local.elasticsearch"]
        index => "logstash-%{+YYYY.MM.dd}"
    }
}
